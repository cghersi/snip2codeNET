<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCommentCantAddComment" xml:space="preserve">
    <value>Acch!! This comment cannot be added to the snippet {0}</value>
  </data>
  <data name="AddCommentNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the comment cannot be added!</value>
  </data>
  <data name="AddCommentNullError" xml:space="preserve">
    <value>Mmmhhh... empty comment: nothing to add!</value>
  </data>
  <data name="AddPropCantAddProp" xml:space="preserve">
    <value>Acch!! This property ({1}:{2}) cannot be added to the snippet {0}</value>
  </data>
  <data name="AddPropNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the property cannot be added!</value>
  </data>
  <data name="AddPropNoNameError" xml:space="preserve">
    <value>No no: we can't add a property without name</value>
  </data>
  <data name="AddPropNoValueError" xml:space="preserve">
    <value>No no: we can't add a property without value</value>
  </data>
  <data name="AddPropsFromWebCantAddProps" xml:space="preserve">
    <value>Acch!! These properties cannot be added to the snippet {0}</value>
  </data>
  <data name="AddPropsFromWebNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the properties cannot be added!</value>
  </data>
  <data name="AddPropsFromWebNullPropsError" xml:space="preserve">
    <value>Mmmhhh... empty list of properties: nothing to add!</value>
  </data>
  <data name="AddRateCantAddRate" xml:space="preserve">
    <value>Oops!! Something wrong during the vote of the snippet {0}</value>
  </data>
  <data name="AddRateNegativeError" xml:space="preserve">
    <value>No no: cannot give a negative vote!</value>
  </data>
  <data name="AddRateNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the vote cannot be added!</value>
  </data>
  <data name="AddSnippetError" xml:space="preserve">
    <value>Oops!! Something wrong reading incoming Snippet</value>
  </data>
  <data name="AddTagsFromWebCantAddTags" xml:space="preserve">
    <value>Acch!! These tags cannot be added to the snippet {0}</value>
  </data>
  <data name="AddTagsFromWebNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the tags cannot be added!</value>
  </data>
  <data name="AddTagsFromWebNullTagsError" xml:space="preserve">
    <value>Mmmhhh... empty list of tags: nothing to add!</value>
  </data>
  <data name="CantFindSnippetError" xml:space="preserve">
    <value>Acch!! There's no clue of this snippet!</value>
  </data>
  <data name="ClearTagsError" xml:space="preserve">
    <value>Acch!! The tags cannot be cleared from the snippet {0}</value>
  </data>
  <data name="ClearTagsNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the tags cannot be cleared!</value>
  </data>
  <data name="DeleteCommentCantFindSnippetError" xml:space="preserve">
    <value>Acch!! There's no clue of this snippet!</value>
  </data>
  <data name="DeleteCommentError" xml:space="preserve">
    <value>Acch!! This comment ({0}) cannot be removed</value>
  </data>
  <data name="DeleteCommentNegCommentError" xml:space="preserve">
    <value>No no: cannot remove a negative comment ({0})!</value>
  </data>
  <data name="DeletePropError" xml:space="preserve">
    <value>Oops!! Something wrong while removing the property {0} from the snippet {1}</value>
  </data>
  <data name="DeletePropNegPropError" xml:space="preserve">
    <value>No no: cannot remove a negative property ({0})!</value>
  </data>
  <data name="DeletePropNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the property cannot be removed!</value>
  </data>
  <data name="DeleteSnippetError" xml:space="preserve">
    <value>Oops!! Something wrong while removing the snippet {0}</value>
  </data>
  <data name="DeleteSnippetNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): it cannot be removed!</value>
  </data>
  <data name="FindGroupItemsError" xml:space="preserve">
    <value>Acch!! There's no content here...</value>
  </data>
  <data name="FindItemsError" xml:space="preserve">
    <value>Acch!! There's no content here..</value>
  </data>
  <data name="GetCommentError" xml:space="preserve">
    <value>Acch!! There's no clue of this comment!</value>
  </data>
  <data name="ParseInputError" xml:space="preserve">
    <value>Acch!! Cannot parse incoming input:</value>
  </data>
  <data name="UserNotAllowedToChangeError" xml:space="preserve">
    <value>No no: User is not allowed to change this snippet {0}</value>
  </data>
  <data name="UserNotAllowedToSeeError" xml:space="preserve">
    <value>No no: User is not allowed to see this snippet {0}</value>
  </data>
  <data name="DeleteTagsError" xml:space="preserve">
    <value>Oops!! Something wrong while removing these tags from the snippet {0}</value>
  </data>
  <data name="DeleteTagsNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the tags cannot be deleted!</value>
  </data>
  <data name="ShareCantShare" xml:space="preserve">
    <value>Oops!! Something wrong while sharing the snippet {0}</value>
  </data>
  <data name="ShareNegativeReceiver" xml:space="preserve">
    <value>No no: cannot share to a negative receiver ({0})!</value>
  </data>
  <data name="ShareNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): it can't be shared!</value>
  </data>
  <data name="DeletePropEmptyValueError" xml:space="preserve">
    <value>No no: cannot remove a property without a value!</value>
  </data>
  <data name="DeletePropEmptyNameError" xml:space="preserve">
    <value>No no: cannot remove a property without a name!</value>
  </data>
  <data name="ClearPropertiesError" xml:space="preserve">
    <value>Acch!! The properties cannot be cleared from the snippet {0}</value>
  </data>
  <data name="ClearPropertiesNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): the properties cannot be cleared!</value>
  </data>
  <data name="NegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0})</value>
  </data>
  <data name="NullInput" xml:space="preserve">
    <value>Acch!! Cannot parse incoming input: input is null</value>
  </data>
  <data name="PublishCantPublish" xml:space="preserve">
    <value>Oops!! Something wrong while publishing the snippet {0}</value>
  </data>
  <data name="PublishNegSnippetError" xml:space="preserve">
    <value>Mmmhhh... negative snippet ({0}): it can't be published!</value>
  </data>
  <data name="PublishWrongChannel" xml:space="preserve">
    <value>No no: cannot publish to an empty list of channels!</value>
  </data>
  <data name="CountSnippetError" xml:space="preserve">
    <value>Oops!! Something wrong while counting the snippet of group {0}</value>
  </data>
  <data name="CountSnippetWrongGroup" xml:space="preserve">
    <value>No no: cannot see the contents of this group!</value>
  </data>
</root>